name: build

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * 0"

# Declare default permissions as read only.
permissions: read-all

env:
  # Keep for Dart SDK reporting
  PUB_ENVIRONMENT: bot.github
  # LTS
  NODE_VERSION: '18'
  # Tool location
  BASE_DIR: ${{ github.workspace }}
  TOOL_DIR: ${{ github.workspace }}/tool

jobs:

  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [stable, beta]
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          submodules: recursive
      - uses: dart-lang/setup-dart@6a218f2413a3e78e9087f638a238f6b40893203d
        with:
          sdk: ${{ matrix.sdk }}
      - run: dart pub get
      - run: tool/test.sh
        env:
          DART_CHANNEL: ${{ matrix.sdk }}

  deploy:
    permissions:
      checks: write
      pull-requests: write
    if: ${{ github.event_name == 'push' && 
            github.ref == 'refs/heads/main' && 
            github.repository == 'dart-lang/site-www' }}
    needs: test
    runs-on: ubuntu-latest
    env:
      FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
      FIREBASE_PROJECT: default
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          submodules: recursive
      - run: make build
      - run: make write-prod-robots
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install -g firebase-tools@11.19.0
      - uses: dart-lang/setup-dart@6a218f2413a3e78e9087f638a238f6b40893203d
        with:
          sdk: stable
      - run: tool/check-links.sh
      - uses: FirebaseExtended/action-hosting-deploy@4d0d0023f1d92b9b7d16dda64b3d7abd2c98974b
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DART_DEV }}'
          projectId: dart-dev
          channelId: live

  stage:
    permissions:
      checks: write
      pull-requests: write
    if: ${{ github.ref != 'refs/heads/main' }}
    needs: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@755da8c3cf115ac066823e79a1e1788f8940201b
        with:
          submodules: recursive
      - run: make build
      - uses: actions/setup-node@8c91899e586c5b171469028077307d293428b516
        with:
          node-version: ${{ env.NODE_VERSION }}
      - run: npm install -g firebase-tools@11.19.0
      - uses: dart-lang/setup-dart@6a218f2413a3e78e9087f638a238f6b40893203d
        with:
          sdk: stable
      - run: tool/check-links.sh
      - name: Stage site on Firebase
        if: ${{ 
          github.event.pull_request.head.repo.full_name == github.repository &&
          github.event.pull_request.user.login != 'dependabot[bot]' }}
        uses: FirebaseExtended/action-hosting-deploy@4d0d0023f1d92b9b7d16dda64b3d7abd2c98974b
        with:
          repoToken: '${{ secrets.GITHUB_TOKEN }}'
          firebaseServiceAccount: '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DART_DEV }}'
          projectId: dart-dev
