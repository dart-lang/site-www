name: build

on:
  # Run on PRs and pushes to the default branch.
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]
  schedule:
    - cron: "0 0 * * 0"

env:
  _OS_NAME: linux
  DART_SITE_ENV_DEFS: 1
  JEKYLL_ENV: production
  PUB_ENVIRONMENT: bot.github
  SITE_LOCALHOST_PORT: 5000
  SITE_JEKYLL_DEST: _site
  SITE_JEKYLL_SRC: src
  TMP: ${{ github.workspace }}/tmp
  TZ: US/Pacific # normalize build timestamp

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        sdk: [dev, beta, stable]
        task:
          - ./tool/build.sh --check-links
          - ./tool/check-code.sh
        experimental: [false]
        include:
          - sdk: dev
            task: ./tool/analyze-and-test-examples.sh
            experimental: false
          - sdk: beta
            task: ./tool/analyze-and-test-examples.sh
            experimental: false
          - sdk: stable
            task: ./tool/analyze-and-test-examples.sh
            experimental: false
    steps:
      - uses: actions/checkout@v2
        with:
          # submodules param for checkout action to get site-shared, 'true' might be enough
          submodules: "recursive"
      - run: mkdir -p $TMP
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: ruby/setup-ruby@v1
        if: contains(matrix.task, 'build.sh')
        with:
          bundler-cache: true
          ruby-version: 2.6.5
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: ${{ matrix.sdk }}
      - name: Install node dependencies
        # TODO: caching requires a lockfile for node deps, so does npm ci.
        run: npm install
      - name: Install dart dependencies
        run: dart pub get
      - run: ./tool/shared/write-ci-info.sh -v
        if: contains(matrix.task, 'build.sh')
      - run: ${{ matrix.task }}
        continue-on-error: ${{ matrix.experimental }}

#  sdk-files-up-to-date:
#    runs-on: ubuntu-latest
#    if: |
#      github.event_name == 'push'
#      && github.ref == 'refs/heads/master'
#    steps:
#      - uses: actions/checkout@v2
#      - run: mkdir -p $TMP
#      - uses: dart-lang/setup-dart@v1.0
#        with:
#          sdk: stable
#      - run: ./tool/check-diagnostics.sh

  deploy:
    needs: test
    runs-on: ubuntu-latest
    if: |
      github.event_name == 'push'
      && github.ref == 'refs/heads/master'
      && github.repository == 'dart-lang/site-www'
    steps:
      - uses: actions/checkout@v2
        with:
          # submodules param for checkout action to get site-shared, 'true' might be enough
          submodules: "recursive"
      - run: mkdir -p $TMP
      - uses: actions/setup-node@v2
        with:
          node-version: 14
      - uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true
          ruby-version: 2.6.5
      - uses: dart-lang/setup-dart@v1.0
        with:
          sdk: stable
      - name: Install node dependencies
        # TOOD: caching requires a lockfile for node deps, so does npm ci.
        run: npm install
      - name: Install dart dependencies
        run: dart pub get
      - run: ./tool/shared/write-ci-info.sh -v
      - run: ./tool/build.sh
      - run: ./tool/shared/deploy.sh --robots ok default
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}
