@use '../core/variables' as *;
@use '../core/colors';

$grid-breakpoints: (
    0: 0,
    xxs: 320px,
    xs: 480px,
    sm: 576px,
    md: 768px,
    lg: 992px,
    xl: 1200px,
    xxl: 1440p,
);

$spacers: (
    1: ($site-spacer * 0.25),
    2: ($site-spacer * 0.5),
    3: ($site-spacer * 0.75),
    4: $site-spacer,
    5: ($site-spacer * 1.25),
    6: ($site-spacer * 1.5),
    7: ($site-spacer * 1.75),
    8: ($site-spacer * 2),
    9: ($site-spacer * 2.25),
    10: ($site-spacer * 2.5),
    11: ($site-spacer * 2.75),
    12: ($site-spacer * 3),
);

@function bs-spacer($key: 3) {
  @return map-get($spacers, $key);
}

// TODO(parlough: Remove these utilities from bootstrap.

@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {
  $n: index($breakpoint-names, $name);
  @return if($n != null and $n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);
}

@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {
  $min: map-get($breakpoints, $name);
  @return if($min != 0, $min, null);
}

@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {
  $next: breakpoint-next($name, $breakpoints);
  @return if($next, breakpoint-min($next, $breakpoints) - .02, null);
}

@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {
  $min: breakpoint-min($name, $breakpoints);
  @if $min {
    @media (min-width: $min) {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {
  $max: breakpoint-max($name, $breakpoints);
  @if $max {
    @media (max-width: $max) {
      @content;
    }
  } @else {
    @content;
  }
}
